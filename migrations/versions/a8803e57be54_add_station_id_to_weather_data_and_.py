"""add_station_id_to_weather_data_and_coordinates_to_alert

Revision ID: a8803e57be54
Revises: e431cfa65fae
Create Date: 2025-05-14 02:37:50.875065

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2

# revision identifiers, used by Alembic.
revision: str = 'a8803e57be54'
down_revision: Union[str, None] = 'e431cfa65fae'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Skip the drop table commands as these tables don't exist
    op.add_column('alerts', sa.Column('center_latitude', sa.Float(), nullable=True))
    op.add_column('alerts', sa.Column('center_longitude', sa.Float(), nullable=True))
    op.add_column('alerts', sa.Column('impact_radius_km', sa.Float(), nullable=True))
    op.add_column('alerts', sa.Column('priority', sa.Float(), nullable=True))
    
    # Skip the alter_column commands for geometry columns as they might cause issues
    
    op.add_column('weather_data', sa.Column('station_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'weather_data', 'monitoring_stations', ['station_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'weather_data', type_='foreignkey')
    op.drop_column('weather_data', 'station_id')
    op.drop_column('alerts', 'priority')
    op.drop_column('alerts', 'impact_radius_km')
    op.drop_column('alerts', 'center_longitude')
    op.drop_column('alerts', 'center_latitude')
    # ### end Alembic commands ###
